Prompt para ChatGPT: Prueba Técnica en Node.js
Configuración del Entorno y Ejercicios Lógicos
Preparación del Entorno:

plaintext
Copiar código
Ayúdame a preparar un entorno de desarrollo en Node.js para una prueba técnica. Quiero instalar Node.js, configurar un proyecto con `npm init`, y asegurarme de que tengo las dependencias necesarias para trabajar con una API REST y escribir pruebas unitarias. Por favor, guía paso a paso.
Construcción del Objeto MyMatrix:

plaintext
Copiar código
Necesito implementar un objeto `MyMatrix` en Node.js que reciba una matriz de números enteros y tenga los siguientes métodos:
- `dimension`: Devuelve el número entero que define la dimensión del arreglo o matriz en su mayor profundidad.
- `straight`: Devuelve true o false si la matriz es uniforme (misma cantidad de elementos en cada dimensión).
- `compute`: Devuelve la suma de todos los números en la matriz.
Ayúdame con el código y ejemplos de uso.
Construcción del Objeto MyArray:

plaintext
Copiar código
Necesito implementar un objeto `MyArray` en Node.js que reciba una cadena y determine si es una operación aritmética válida y, si lo es, calcule su valor. Los métodos son:
- `operation`: Devuelve true si el string es una operación aritmética válida, false en caso contrario.
- `compute`: Devuelve el resultado de la operación aritmética o false si no es válida.
Ayúdame con el código y ejemplos de uso.
Consumo de API y CRUD
Configuración de la API:

plaintext
Copiar código
Necesito consumir una API REST en Node.js utilizando `axios` o `node-fetch`. La API tiene los siguientes endpoints:
- `/register` (POST): Crear un nuevo usuario.
- `/auth` (POST): Loguear usuario.
- `/store/<string:name>` (POST, GET, DELETE): Crear, consultar y eliminar tiendas.
- `/stores` (GET): Ver todas las tiendas.
- `/item/<string:name>` (POST, GET, PUT, DELETE): Crear, consultar, actualizar y eliminar artículos.
- `/items` (GET): Ver todos los artículos.

Por favor, ayúdame a implementar estos endpoints paso a paso.
Implementación del Registro de Usuario:

plaintext
Copiar código
Ayúdame a implementar el registro de usuario en Node.js usando `axios`. Necesito hacer una petición POST al endpoint `/register` y manejar la respuesta.
Implementación del Logueo de Usuario:

plaintext
Copiar código
Ayúdame a implementar el logueo de usuario en Node.js usando `axios`. Necesito hacer una petición POST al endpoint `/auth` y manejar la respuesta, incluyendo cómo almacenar y usar el token de autenticación.
Implementación del CRUD de Tiendas:

plaintext
Copiar código
Ayúdame a implementar el CRUD de tiendas en Node.js usando `axios`. Necesito hacer peticiones POST, GET, y DELETE a los endpoints `/store/<string:name>` y `/stores` para crear, consultar, eliminar tiendas y ver todas las tiendas.
Implementación del CRUD de Artículos:

plaintext
Copiar código
Ayúdame a implementar el CRUD de artículos en Node.js usando `axios`. Necesito hacer peticiones POST, GET, PUT, y DELETE a los endpoints `/item/<string:name>` y `/items` para crear, consultar, actualizar, eliminar artículos y ver todos los artículos. También necesito saber cómo incluir el token de autenticación en las peticiones.
Pruebas y Documentación
Escribir Pruebas Unitarias y de Integración:

plaintext
Copiar código
Necesito escribir pruebas unitarias y de integración en Node.js utilizando `jest` o `mocha`. Ayúdame a crear pruebas para los endpoints `/register`, `/auth`, `/store/<string:name>`, `/stores`, `/item/<string:name>`, y `/items`.
Documentación del Proyecto:

plaintext
Copiar código
Necesito documentar una API REST en Node.js. Ayúdame a escribir un README detallado que incluya la estructura del proyecto, cómo ejecutar el código, y ejemplos de uso de los endpoints. También necesito documentar cualquier consideración especial para la autenticación y las pruebas.
Con estos prompts, estarás guiado paso a paso desde la configuración del entorno hasta la implementación de la API y la documentación del proyecto.



